#version 450 core

layout(local_size_x_id = 1, local_size_y_id = 1) in; // workgroup size defined with specialization constants. On cpp side there is associated SpecializationInfo entry in PipelineShaderStageCreateInfo

struct Entity {
	uvec2 pos;
};

struct Dimsgoal {
	uvec2 dims;
	uvec2 goal;
};

layout(binding = 0) buffer lay0{
	uint map[];
};
layout(binding = 1) buffer lay1{
	Entity entities[];
};
layout(binding = 2) buffer lay2{
	uvec2 steps[][20];
};
layout(binding = 3) buffer lay3{
	Dimsgoal dg;
};

void main() {
	const uint id = gl_GlobalInvocationID.y + gl_GlobalInvocationID.x; // current offset
	steps[id][0] = uvec2(entities[id].pos.x,entities[id].pos.y);
	steps[id][1] = uvec2(dg.dims.x,dg.dims.y);
}